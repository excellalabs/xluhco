# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pr:
- master

pool:
  vmImage: 'Ubuntu-16.04'

variables:
  buildConfiguration: 'Release'
  dockerfilePath: 'src/Dockerfile'
  dockerRegistryServiceConnection: xluhco-container-reg
  containerRepositoryName: 'xluhco'
  tag: '$(Build.BuildNumber)'

steps:
- task: Docker@2
  displayName: Build docker image
  inputs:
    command: build
    dockerfile: $(dockerfilePath)
    containerRegistry: $(dockerRegistryServiceConnection)
    repository: $(containerRepositoryName)
    tags: |
      $(tag)
- task: Docker@2
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  displayName: Push to registry (master branch only)
  inputs:
    command: push
    dockerfile: $(dockerfilePath)
    containerRegistry: $(dockerRegistryServiceConnection)
    repository: $(containerRepositoryName)
    tags: |
      $(tag)
# - task: DotNetCoreInstaller@2
#   inputs:
#     version: '3.1.100' # replace this value with the version that you need for your project
# - task: DotNetCoreCLI@2
#   displayName: Nuget Package Restore
#   inputs:
#     command: restore
#     projects: '**/*.csproj'
# - task: DotNetCoreCLI@2
#   displayName: Build Projects
#   inputs:
#     command: build
#     projects: '**/*.csproj'
#     arguments: '--configuration $(buildConfiguration)'  
# - task: DotNetCoreCLI@2
#   displayName: Run Unit Tests
#   inputs:
#     command: test
#     projects: '**/*tests/*.csproj'
#     arguments: '--configuration $(buildConfiguration)'    
# - task: DotNetCoreCLI@2
#   displayName: Publish Project
#   inputs:
#     command: publish
#     publishWebProjects: True
#     arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
#     zipAfterPublish: True
#   condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')
# - task: PublishPipelineArtifact@0
#   displayName: Publish Pipeline Artifacts
#   inputs:
#     targetPath: $(Build.ArtifactStagingDirectory)
#   condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')
